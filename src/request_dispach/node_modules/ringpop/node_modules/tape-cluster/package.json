{
  "name": "tape-cluster",
  "version": "2.1.0",
  "description": "A helper to run tests against a cluster",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/tape-cluster.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/tape-cluster",
  "bugs": {
    "url": "https://github.com/Raynos/tape-cluster/issues",
    "email": "raynos2@gmail.com"
  },
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "coveralls": "^2.10.0",
    "istanbul": "^0.3.5",
    "lint-trap": "^1.0.0",
    "opn": "^1.0.1",
    "request": "2.55.0",
    "tap-spec": "^2.1.1",
    "tape": "^3.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/tape-cluster/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "npm run jshint -s && npm run cover -s",
    "unit-test": "node test/index.js | tap-spec",
    "jshint": "lint-trap .",
    "cover": "istanbul cover --report html --print detail -- test/index.js && npm run check-cover -s",
    "check-cover": "istanbul check-coverage --branches=100 --lines=100 --functions=100",
    "view-cover": "opn ./coverage/index.html",
    "travis": "npm run cover -s && istanbul report lcov && ((cat coverage/lcov.info | coveralls) || exit 0)"
  },
  "engine": {
    "node": ">= 0.8.x"
  },
  "pre-commit": [
    "test"
  ],
  "pre-commit.silent": true,
  "ngen-version": "5.1.0",
  "readme": "# tape-cluster\n\n<!--\n    [![build status][build-png]][build]\n    [![Coverage Status][cover-png]][cover]\n    [![Davis Dependency status][dep-png]][dep]\n-->\n\n<!-- [![NPM][npm-png]][npm] -->\n\nA helper to run integration tests against a cluster\n\n## Motivation\n\nWhen writing integration tests against a service you generally\nwant to spawn up an instance of the application or spawn up\na cluster of applications.\n\nWriting tests against such a cluster can be tedious without\na helper to setup your cluster before and after every test.\n\n## Example\n\nYour test file\n\n```js\n// test/what.js\n'use strict';\n\nvar request = require('request');\n\nvar MyTestCluster = require('./lib/test-cluster.js');\n\nMyTestCluster.test('a test', {\n    port: 8000\n}, function t(cluster, assert) {\n    request({\n        url: 'http://localhost:' + cluster.port + '/foo'\n    }, function onResponse(err, resp, body) {\n        assert.ifError(err);\n\n        assert.equal(resp.statusCode, 200);\n        assert.equal(resp.body, '/foo');\n\n        assert.end();\n    });\n});\n```\n\nYour actual `test-cluster.js`\n\n```js\n// test-cluster.js\n'use strict';\n\nvar tape = require('tape');\nvar http = require('http');\nvar tapeCluster = require('tape-cluster');\n\nMyTestCluster.test = tapeCluster(tape, MyTestCluster);\n\nmodule.exports = MyTestCluster;\n\nfunction MyTestCluster(opts) {\n    if (!(this instanceof MyTestCluster)) {\n        return new MyTestCluster(opts);\n    }\n\n    var self = this;\n\n    self.assert = opts.assert;\n    self.port = opts.port;\n    self.server = http.createServer();\n\n    self.server.on('request', onRequest);\n\n    function onRequest(req, res) {\n        res.end(req.url);\n    }\n}\n\nMyTestCluster.prototype.bootstrap = function bootstrap(cb) {\n    var self = this;\n\n    self.server.once('listening', cb);\n    self.server.listen(self.port);\n};\n\nMyTestCluster.prototype.close = function close(cb) {\n    var self = this;\n\n    self.server.close(cb);\n};\n```\n\n## Installation\n\n`npm install tape-cluster`\n\n## Tests\n\n`npm test`\n\n## Contributors\n\n - Raynos\n\n## MIT Licensed\n\n  [build-png]: https://secure.travis-ci.org/Raynos/tape-cluster.png\n  [build]: https://travis-ci.org/Raynos/tape-cluster\n  [cover-png]: https://coveralls.io/repos/Raynos/tape-cluster/badge.png\n  [cover]: https://coveralls.io/r/Raynos/tape-cluster\n  [dep-png]: https://david-dm.org/Raynos/tape-cluster.png\n  [dep]: https://david-dm.org/Raynos/tape-cluster\n  [npm-png]: https://nodei.co/npm/tape-cluster.png?stars&downloads\n  [npm]: https://nodei.co/npm/tape-cluster\n",
  "readmeFilename": "README.md",
  "_id": "tape-cluster@2.1.0",
  "dist": {
    "shasum": "19ddb37d32037e2a694c687fd3c59fc7452b68ef"
  },
  "_from": "tape-cluster@2.1.0",
  "_resolved": "https://registry.npmjs.org/tape-cluster/-/tape-cluster-2.1.0.tgz"
}
