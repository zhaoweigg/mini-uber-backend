{
  "name": "farmhash",
  "version": "0.2.2",
  "author": {
    "name": "Lovell Fuller",
    "email": "npm@lovell.info"
  },
  "contributors": [
    {
      "name": "Matt Ranney",
      "email": "mjr@ranney.com"
    },
    {
      "name": "Jonas Hermsmeier",
      "email": "jhermsmeier@gmail.com",
      "url": "https://jhermsmeier.de"
    }
  ],
  "description": "Node.js implementation of FarmHash, Google's family of high performance hash functions for strings",
  "scripts": {
    "test": "node test/unit",
    "install": "node-gyp rebuild"
  },
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/lovell/farmhash"
  },
  "keywords": [
    "farmhash",
    "hash",
    "cityhash",
    "murmurhash",
    "fingerprint"
  ],
  "dependencies": {
    "nan": "^1.6.2"
  },
  "license": "Apache 2.0",
  "engines": {
    "node": ">=0.10"
  },
  "gypfile": true,
  "readme": "# farmhash\n\nNode.js implementation of Google's [FarmHash](https://code.google.com/p/farmhash/) family of very fast hash functions.\n\nFarmHash is the successor to CityHash. Functions in the FarmHash family are not suitable for cryptography.\n\nAs the V8 JavaScript engine only natively supports 32-bit unsigned integers, the 64-bit methods return String objects instead of Numbers and the 128-bit methods are not implemented.\n\nThis module has been compiled and tested with Node.js v0.10, v0.12 and io.js v1.2.0 on Linux, OS X and Windows.\n\n## Installation\n\n```\nnpm install farmhash\n```\n\n## Usage\n\n```javascript\nvar farmhash = require('farmhash');\n```\n\n```javascript\nvar hash = farmhash.hash32('test');\nconsole.log(typeof hash); // 'number'\n```\n\n```javascript\nvar hash = farmhash.hash64(new Buffer('test'));\nconsole.log(typeof hash); // 'string'\n```\n\n```javascript\nvar hash = farmhash.hash64WithSeed('test', 123);\nconsole.log(typeof hash); // 'string'\n```\n\n```javascript\nvar hash = farmhash.fingerprint32(new Buffer('test'));\nconsole.log(typeof hash); // 'number'\n```\n\n```javascript\nvar hash = farmhash.fingerprint64('test');\nconsole.log(typeof hash); // 'string'\n```\n\n## API\n\n### Hash\n\nThe hash methods are platform dependent. Different CPU architectures, for example 32-bit vs 64-bit, Intel vs ARM, might produce different results for a given input.\n\n#### hash32(input)\n\n* `input` is the Buffer or String to hash.\n\nReturns a Number containing the 32-bit unsigned integer hash value of `input`.\n\n#### hash32WithSeed(input, seed)\n\n* `input` is the Buffer or String to hash.\n* `seed` is an integer Number to use as a seed.\n\nReturns a Number containing the 32-bit unsigned integer hash value of `input`.\n\n#### hash64(input)\n\n* `input` is the Buffer or String to hash.\n\nReturns a String representing the 64-bit unsigned integer hash value of `input`.\n\n#### hash64WithSeed(input, seed)\n\n* `input` is the Buffer or String to hash.\n* `seed` is an integer Number to use as a seed.\n\nReturns a String representing the 64-bit unsigned integer hash value of `input`.\n\n#### hash64WithSeeds(input, seed1, seed2)\n\n* `input` is the Buffer or String to hash.\n* `seed1` and `seed2` are integer Numbers to use as seeds.\n\nReturns a String representing the 64-bit unsigned integer hash value of `input`.\n\n### Fingerprint\n\nThe fingerprint methods are platform independent, producing the same results for a given input on any machine.\n\n#### fingerprint32(input)\n\n* `input` is the Buffer or String to fingerprint.\n\nReturns a Number containing the 32-bit unsigned integer fingerprint value of `input`.\n\n#### fingerprint64(input)\n\n* `input` is the Buffer or String to fingerprint.\n\nReturns a String representing the 64-bit unsigned integer fingerprint value of `input`.\n\n## Testing\n\n[![Build Status](https://travis-ci.org/lovell/farmhash.png?branch=master)](https://travis-ci.org/lovell/farmhash)\n\n```\nnpm test\n```\n\n## Licence\n\nCopyright 2014, 2015 Lovell Fuller and contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0.html)\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nCopyright 2014 Google, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lovell/farmhash/issues"
  },
  "_id": "farmhash@0.2.2",
  "_from": "farmhash@^0.2.0"
}
