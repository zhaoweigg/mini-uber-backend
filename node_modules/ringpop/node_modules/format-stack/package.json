{
  "name": "format-stack",
  "version": "4.1.0",
  "description": "Formats a stack with colors",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/format-stack.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/format-stack",
  "bugs": {
    "url": "https://github.com/Raynos/format-stack/issues",
    "email": "raynos2@gmail.com"
  },
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "dependencies": {
    "ansi-styles": "^1.1.0",
    "minimist": "^1.1.0",
    "process": "^0.10.0",
    "trycatch": "1.5.11"
  },
  "devDependencies": {
    "tape": "^2.12.3",
    "jshint": "^2.5.0",
    "istanbul": "^0.2.7",
    "tap-spec": "^0.1.8",
    "pre-commit": "0.0.5",
    "coveralls": "^2.10.0",
    "run-browser": "^1.3.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/format-stack/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "npm run jshint -s && NODE_ENV=test node test/index.js | tap-spec",
    "unit-test": "NODE_ENV=test node test/index.js | tap-spec",
    "jshint-pre-commit": "jshint --verbose $(git diff --cached --name-only | grep '\\.js$')",
    "jshint": "jshint --verbose .",
    "cover": "istanbul cover --report none --print detail test/index.js",
    "view-cover": "istanbul report html && open ./coverage/index.html",
    "travis": "npm run cover -s && istanbul report lcov && ((cat coverage/lcov.info | coveralls) || exit 0)",
    "phantom": "run-browser test/index.js -b",
    "browser": "run-browser test/index.js"
  },
  "engine": {
    "node": ">= 0.8.x"
  },
  "pre-commit": [
    "jshint-pre-commit",
    "unit-test"
  ],
  "ngen-version": "4.0.3",
  "readme": "# format-stack\n\nFormats a stack with colors\n\nThis module must be required as the first thing before\neverything else. It will format your stack trace with\ncolors and will also print the previous stack.\n\nBe warned this uses `trycatch` so it will enable domains\nand monkey patch everything to implement long stack\ntraces.\n\n![format-stack-example](http://i.imgur.com/PBF5YwC.jpg)\n\n## Example\n\n```js\nrequire(\"format-stack\").set({\n  traces: 'short' // 'long' works too, maybe.. ;)\n});\n\n// Any thrown error will now have a pretty printed stack\n// trace.\n```\n\n## Installation\n\n`npm install format-stack`\n\n## Tests\n\n`npm test`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [build-png]: https://secure.travis-ci.org/Raynos/format-stack.png\n  [build]: https://travis-ci.org/Raynos/format-stack\n  [cover-png]: https://coveralls.io/repos/Raynos/format-stack/badge.png\n  [cover]: https://coveralls.io/r/Raynos/format-stack\n  [dep-png]: https://david-dm.org/Raynos/format-stack.png\n  [dep]: https://david-dm.org/Raynos/format-stack\n  [test-png]: https://ci.testling.com/Raynos/format-stack.png\n  [test]: https://ci.testling.com/Raynos/format-stack\n  [npm-png]: https://nodei.co/npm/format-stack.png?stars&downloads\n  [npm]: https://nodei.co/npm/format-stack\n",
  "readmeFilename": "README.md",
  "_id": "format-stack@4.1.0",
  "dist": {
    "shasum": "5f05b5b875f8c04dcfaddf58e241ff8f6835bc99"
  },
  "_from": "format-stack@4.1.0",
  "_resolved": "https://registry.npmjs.org/format-stack/-/format-stack-4.1.0.tgz"
}
