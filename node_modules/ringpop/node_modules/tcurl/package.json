{
  "name": "tcurl",
  "version": "4.21.1",
  "description": "A command line utility to talk to a tchannel server",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/uber/tcurl.git"
  },
  "main": "index.js",
  "homepage": "https://github.com/uber/tcurl",
  "bin": {
    "tcurl": "index.js"
  },
  "bugs": {
    "url": "https://github.com/uber/tcurl/issues",
    "email": "raynos2@gmail.com"
  },
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "dependencies": {
    "camelcase-keys": "^1.0.0",
    "debug-logtron": "^3.2.0",
    "my-local-ip": "^1.0.0",
    "process": "^0.11.0",
    "rc": "^1.1.2",
    "readable-stream": "^1.0.33",
    "safe-json-parse": "^4.0.0",
    "shon": "^3.0.5",
    "tchannel": "^3.6.24",
    "traverse": "^0.6.6",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "coveralls": "^2.10.0",
    "eslint": "^1.9.0",
    "format-stack": "4.0.0",
    "itape": "^1.5.0",
    "marked-man": "^0.1.5",
    "nyc": "^5.0.1",
    "opn": "^1.0.1",
    "ready-signal": "^1.2.0",
    "tape": "^3.4.0",
    "uber-licence": "^2.0.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/uber/tcurl/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "add-licence": "uber-licence",
    "build-usage": "usage2json tcurl.usage > tcurl.json && usage2json health.usage > health.json",
    "check-cover": "nyc check-coverage --branches=50 --lines=70 --functions=80 && nyc report || echo lol",
    "check-licence": "uber-licence --dry",
    "check-ls": "npm ls",
    "cover": "npm run test-cover -s && npm run check-cover -s",
    "lint": "eslint .",
    "man": "bash scripts/create-man.sh",
    "test": "npm run check-ls -s && npm run lint -s && npm run man && npm run build-usage && npm run cover -s",
    "test-cover": "nyc --reporter=lcov --reporter=html -- node test/index.js",
    "trace": "itape test/index.js --trace",
    "travis": "npm run cover -s && nyc report lcov && ((cat coverage/lcov.info | coveralls) || exit 0)",
    "view-cover": "opn ./coverage/index.html"
  },
  "engines": {
    "node": ">= 0.10.x"
  },
  "pre-commit": [
    "check-licence",
    "test"
  ],
  "pre-commit.silent": true,
  "itape": {
    "trace": {
      "debuglog": [
        "tcurl"
      ],
      "leakedHandles": {
        "timeout": 5001,
        "debugSockets": true
      },
      "formatStack": true
    }
  },
  "uber-ngen-version": "5.1.0",
  "readme": "# tcurl\n\n<!--\n    [![build status][build-png]][build]\n    [![Coverage Status][cover-png]][cover]\n    [![Davis Dependency status][dep-png]][dep]\n-->\n\n<!-- [![NPM][npm-png]][npm] -->\n\nA command line utility for sending requests to TChannel services.\n\n```\nusage: tcurl <service> [--health | <method> [<body>]]\nSends one or more TChannel requests.\n  <service>\n    The name of the TChannel/Hyperbahn service to send requests to.\n  <method>\n    The name of the endpoint to send requests to or method to call.\n  [<body>] :jshon\n    The Thrift or JSON argument in SHON or JSON format.\n  [--headers <head>] :jshon\n    The application headers as SHON or JSON arguments.\n  [-p|--peer <peer>...]\n    The peer or peers to connect.\n  [-P|--peerlist <path>]\n    The path to a file containing a JSON list of peers.\n    The -H and --hostlist flags are deprecated.\n  [-r|--raw]\n    Use the raw argument scheme.\n  [--http <method>]\n    Use the HTTP argument scheme with given method.\n  [-j|--json]\n    Use the JSON argument scheme.\n    The -J flag is deprecated.\n  [-t|--thrift <thrift>]\n    Where to find Thrift IDL files.\n  [--no-strict]\n    Disable strict Thrift parsing.\n  [--cn|--caller <cn>]\n    Fake an alternate caller service name.\n    tcurl is the default.\n  [--sk|--shard-key <sk>]\n    Ringpop shard key\n    The --shardKey flag is deprecated.\n  [--rd|--routing-delegate <rd>]\n    Forward to the given service for application-specific routing.\n  [--timeout <ms>]\n    Timeout in milliseconds\n  [--requests <count>]\n    Number of requests to make\n  [--rate <rate>]\n    Request rate in requests per second\n  [--delay <ms>]\n    Delay between requests in milliseconds\n  [--time <ms>]\n    Benchmark duration in milliseconds\n  [--health]*\n    Hit the health endpoint for the service\n  [-h]* short help\n  [--help]* man page\n  [-v|--version]* print version\n\nThe [-3|--arg3|--body <body>] argument is deprecated\nin favor of passing <body> as JSON or SHON as a positional argument.\nThe [-2|--arg2|--head <head>] argument is deprecated\nin favor of the --headers <headers> argument with JSON or SHON.\n```\n\n[Click here for full usage docs.](usage.md)\n\n## Installation\n\n`npm install tcurl`\n\n## Examples\n\n### Thrift\n\nFor the purposes of these examples, let's assume that you have a TChannel\nserver listening on `localhost:1234`. The server registers handlers for the\nthrift interface saved as `services/chamber.thrift` and defined as:\n\n```thrift\nstruct EchoRequest {\n  1: required string input;\n}\n\nservice Chamber {\n  string echo(\n    1: required EchoRequest request;\n  )\n}\n```\n\nYou could use TCurl to query this service by running:\n\n```\ntcurl -p localhost:1234 chamber Chamber::echo -t ./services -3 '{\"request\": {\"input\": \"foo\"}}'\n```\n\n## `localhost` caveat\n\nFor TChannel and Hyperbahn to work together effectively, most tchannel services need to listen on the\nexternal IP of the host they are running on.\n\nThis means when you use `127.0.0.1` you cannot reach the service with tcurl as it's not listening on\nloopback.\n\nTo make supporting external IPs easier we've made `localhost` resolve to the external IP of the machine.\nThis means if your listening on loopback you have to use `127.0.0.1` and not `localhost`\n\n## tcurlrc\n\nTCurl can be configured with default parameters using a either /etc/tcurlrc or\na .tcurlrc in the current working directory or any of its parent directories.\nThe rc file may be in INI or JSON format.\n\n    {\n        \"hostlist\": \"/etc/ringpop/hosts.json\"\n    }\n\n## Exit Codes\n\n - 0: for all successful requests\n - 1: timeout\n - 2: cancelled\n - 3: busy\n - 4: declined\n - 5: unexpected error\n - 6: bad request\n - 7: network error\n - 8: unhealthy (broken circuit)\n - 124: unhealthy / not OK thrift response\n - 125: misc tcurl / tchannel internal error\n - 126: response not ok error\n - 127: fatal protocol error\n\n## NPM scripts\n\n - `npm run add-licence` This will add the licence headers.\n - `npm run cover` This runs the tests with code coverage\n - `npm run lint` This will run the linter on your code\n - `npm test` This will run the tests.\n - `npm run trace` This will run your tests in tracing mode.\n - `npm run travis` This is run by travis.CI to run your tests\n - `npm run view-cover` This will show code coverage in a browser\n\n## Contributors\n\n - Raynos\n - ShanniLi\n - kriskowal\n\n## MIT Licenced\n\n  [build-png]: https://secure.travis-ci.org/uber/tcurl.png\n  [build]: https://travis-ci.org/uber/tcurl\n  [cover-png]: https://coveralls.io/repos/uber/tcurl/badge.png\n  [cover]: https://coveralls.io/r/uber/tcurl\n  [dep-png]: https://david-dm.org/uber/tcurl.png\n  [dep]: https://david-dm.org/uber/tcurl\n  [test-png]: https://ci.testling.com/uber/tcurl.png\n  [tes]: https://ci.testling.com/uber/tcurl\n  [npm-png]: https://nodei.co/npm/tcurl.png?stars&downloads\n  [npm]: https://nodei.co/npm/tcurl\n",
  "readmeFilename": "README.md",
  "_id": "tcurl@4.21.1",
  "dist": {
    "shasum": "534b818a8085b2b97bfd1d678acb318fc3605d61"
  },
  "_from": "tcurl@^4.11.1",
  "_resolved": "https://registry.npmjs.org/tcurl/-/tcurl-4.21.1.tgz"
}
