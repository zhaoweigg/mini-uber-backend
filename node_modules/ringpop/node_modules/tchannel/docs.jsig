type Logger : {
    debug: (String, Object) => void,
    info: (String, Object) => void,
    warn: (String, Object) => void,
    error: (String, Object) => void,
    fatal: (String, Object) => void
}
type Timers : {
    setTimeout: (Function, timeout: Number) => id: Number,
    clearTimeout: (id: Number) => void,
    now: () => timestamp: Number
}

type IP : String
type HostInfo : String
type TChannelValue :
    Buffer | String | null | undefined

type TChannelInResponse : {
    id: Number,
    ok: Boolean,

    arg1: Buffer,
    arg2: Buffer,
    arg3: Buffer
}

type TChannelOutRequest : {
    id: Number,
    serviceName: String,

    send: (
        arg1: Buffer | String,
        arg2: TChannelValue,
        arg3: TChannelValue,
        cb: Callback<Error, res: TChannelInResponse>
    ) => void
}

type TChannelInRequest : {
    id: Number,
    serviceName: String,

    arg1: Buffer,
    arg2: Buffer,
    arg3: Buffer
}

type TChannelOutResponse : {
    id: Number,
    code: Number,
    ok: Boolean,

    arg1: Buffer,
    arg2: Buffer,
    arg3: Buffer,

    sendOk: (res1: Buffer, res2: Buffer) => void,
    sendNotOk: (res1: Buffer, res2: Buffer) => void
}

type TChannelHandler : {
    handleRequest : (
        req: TChannelInRequest,
        res: TChannelOutResponse
    ) => void
}

type TChannel : {
    handler: TChannelHandler

    request: (
        options: {
            host: HostInfo,
            timeout?: Number
        }
    ) => TChannelOutRequest,

    listen: (
        port:Number,
        hostname:String,
        Callback<Error>?
    ) => void,
    address: () => ?{port, family, address}
    close: (Callback<Error>) => void,
    hostPort: HostInfo
}

tchannel : (options: {
    handler?: TChannelHandler,

    logger?: Logger,
    timers?: Timers,

    reqTimeoutDefault?: Number,
    serverTimeoutDefault?: Number,
    timeoutCheckInterval?: Number,
    timeoutFuzz?: Number
}) => TChannel

tchannel/endpoint-handler : (serviceName: String) =>
    TChannelHandler & {
        register: (
            name: String,
            handler: (
                req: TChannelInRequest,
                res: TChannelOutResponse
            ) => void
        )
    }
