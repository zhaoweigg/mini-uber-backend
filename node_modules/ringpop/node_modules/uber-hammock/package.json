{
  "name": "uber-hammock",
  "version": "1.0.0",
  "description": "Node.js mock / polyfill http object library for http req / res",
  "main": "index.js",
  "scripts": {
    "test": "tape ./tests/*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tommymessbauer/hammock.git"
  },
  "keywords": [
    "node",
    "mock",
    "http",
    "request",
    "response",
    "polyfill"
  ],
  "dependencies": {
    "cookies": "~0.3.6",
    "lodash": "~2.4.1",
    "readable-stream": "~1.0.33"
  },
  "devDependencies": {
    "tape": "^3.0.3"
  },
  "author": {
    "name": "Tommy Messbauer"
  },
  "license": "MIT",
  "readme": "hammock\n=======\n\nNode.js mock / polyfill http object library for http req / res.  \n\nMotivation\n==========\n\nPolyfill req / res for testing w/o http or for code generation from an existing site.\n\nExample\n=======\n\n```js\n/* Should consider migrating to a factory so that people don't have to guess whether to use new or not */\nvar MockRequest = require('uber-hammock').Request,\n    MockResponse = require('uber-hammock').Response;\n\n/* Most This is most helpful for GET requests.  In future, it would be nice to polyfill body parsing events. */\nvar req = new MockRequest({\n        url: '/foo',\n        headers: { host: 'localhost', bar: 'baz' },\n        method: 'GET'\n    }),\n    res = new MockResponse();\n\nres.on('end', function(err, data) {\n     console.log(data.statusCode);\n     console.log(util.inspect(data.headers));\n     console.log(data.body);\n});\n\n/* Using pipeline-router / director syntax here, but this should be simple with express. */\nvar router = RouterFactory.create({ /* options */ });\nrouter.dispatch(req, res);\n\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tommymessbauer/hammock/issues"
  },
  "_id": "uber-hammock@1.0.0",
  "_from": "uber-hammock@^1.0.0"
}
