diff --git a/test/integration/swim-test.js b/test/integration/swim-test.js
index 06dea40..0e1446e 100644
--- a/test/integration/swim-test.js
+++ b/test/integration/swim-test.js
@@ -19,6 +19,7 @@
 // THE SOFTWARE.
 'use strict';
 
+var sendPing = require('../../lib/swim/ping-sender.js');
 var sendPingReq = require('../../lib/swim/ping-req-sender.js');
 var testRingpopCluster = require('../lib/test-ringpop-cluster.js');
 
@@ -62,6 +63,23 @@ testRingpopCluster({
     tap: function tap(cluster) {
         mkNoGossip(cluster);
     }
+}, 'ping 1 member', function t(bootRes, cluster, assert) {
+    var ringpop = cluster[0];
+    var unreachableMember = ringpop.membership.findMemberByAddress(cluster[1].hostPort);
+
+    sendPing({
+        ringpop: cluster[0],
+        target: unreachableMember,
+    }, function onPing(ok, body) {
+        assert.false(ok, 'ok is false');
+        assert.end();
+    });
+});
+
+testRingpopCluster({
+    tap: function tap(cluster) {
+        mkNoGossip(cluster);
+    }
 }, 'ping-reqs 1 member', function t(bootRes, cluster, assert) {
     var ringpop = cluster[0];
     var unreachableMember = ringpop.membership.findMemberByAddress(cluster[1].hostPort);
@@ -72,8 +90,13 @@ testRingpopCluster({
         pingReqSize: 3
     }, function onPingReq(err, res) {
         assert.ifErr(err, 'no error occurred');
+        assert.true(res, 'result returned')
+        console.log('RES:');
+        console.log(res);
+        assert.true(res.pingReqAddrs, 'result contains pingReqAddrs');
         assert.equal(res.pingReqAddrs.length, 1,
             'number of selected ping-req members is correct');
+        assert.true(res.pingReqSuccess, 'result contains pingReqSuccess');
         assert.ok(res.pingReqSuccess.address === cluster[2].hostPort,
             'successful ping-req response from either member');
         assert.end();
